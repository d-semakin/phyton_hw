# # 14. Напишите программу, которая принимает на вход вещественное число и показывает сумму его цифр.
# # Пример:
# # 6782 -> 23
# # 0,56 -> 11


def sum_digits_in_number(n: float):
    """
    Функция принимает вещественное число и выдает сумму его цифр.

    :param n: Любое вещественное число
    """
    a = n.split('.')
    b = "".join(a)
    c = [int(i) for i in b]
    print(sum(c))

n = (input('Введите число: '))
sum_digits_in_number(n)


# 15. Напишите программу, которая принимает на вход число N и выдает набор произведений чисел от 1 до N.
# Пример:
# пусть N = 4, тогда [ 1, 2, 6, 24 ] (1, 1*2, 1*2*3, 1*2*3*4)


def Multiply_n(n: int) ->list:
    """
    Функция принимает на вход число n и выдает набор произведений чисел от 1 до N.

    :param n: int
    :return: list
    """
    arr = [1] * n
    i = 0
    while i < n:
        arr[i] = arr[i - 1] * (i + 1)
        i += 1
    return arr


n = int(input('Введите число: '))
print(Multiply_n(n))


# 16. Задайте список из n чисел последовательности (1+1/n)^n и выведите на экран их сумму.
# Пример:
# Для n = 6: {1: 2, 2: 2,25, 3: 2,37, 4: 2,44, 5: 2,49, 6: 2,52}


def Function_of_n(n: int) -> dict[int, float]:
    """
Функция для вывода последовательности расчитаной по формуле (1+1/n)^n
    :param n: Число элементов последовательности
    :return: Словарь
    """
    arr = {}
    for i in range(1, n + 1):
        arr[i] = (1 + 1 / i) ** i
        i += 1

    return arr


n = int(input('Введите число: '))
print(Function_of_n(n))



# 17. Задайте список из N элементов, заполненных числами из промежутка [-N, N]. Найдите произведение элементов на
# введенных пользователем позициях.

import random
from typing import Dict


def create_arr(n: int) -> list:
    """
    Функция создает массив из N элементов и заполняет его числами из промежутка от -n до n.
    :param n: Кол-во элементов в Списке
    :return: Список
    """
    arr = [0] * n
    for i in range(0, n):
        arr[i] = random.randint(-n, n)
        # arr.append(random.randint(-n,n))
    print(arr)
    return arr


def multiply_elements(arr):
    """
    Функция принимает список и зумножает 2 элемента, выбранных пользователем.
    :param arr: Список на входе
    :return: int. Результат умножения
    """
    a = int(input('Введите позицию элемента списка: '))
    if len(arr) < a < 0:
        print(f'Элемент с позицией {a} отсутствует в списке')
    b = int(input('Введите позицию элемента списка: '))
    if len(arr) < b < 0:
        print(f'Элемент с позицией {b} отсутствует в списке')
    return (f'Произведение элементов {a} и {b} равно {arr[a - 1] * arr[b - 1]}')


n = int(input('Введите число: '))
print(multiply_elements(create_arr(n)))
